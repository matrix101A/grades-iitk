{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","course","setCourse","year","setYear","sem","setSem","data","setData","useEffect","className","onSubmit","e","preventDefault","console","log","flattenedGrades","temp","type","name","value","onChange","event","target","undefined","Grades","A","B","C","D","F","Total","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sxuhCA6EeA,MAzEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGSJ,mBAAS,IAHlB,mBAGNK,EAHM,KAGDC,EAHC,OAIWN,mBAAS,IAJpB,mBAINO,EAJM,KAIAC,EAJA,KA4Bb,OAtBAC,qBAAU,eAuBR,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,gEACA,kFACA,sFACA,6DACA,gEACA,sFAGF,uBAAMC,SAlBW,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAIC,GACZ,IAAIC,EAAOD,EAAgBb,GAAME,GAAKJ,GACtCO,EAAQS,GACRH,QAAQC,IAAIR,IAaV,UACE,sBAAKG,UAAU,eAAf,UACE,4CACA,uBAAOQ,KAAK,OAAOC,KAAK,OAAOC,MAAOjB,EAAMkB,SAlC/B,SAACC,GACpB,IAAIL,EAAOK,EAAMC,OAAOH,MACxBhB,EAAQa,GACRH,QAAQC,IAAIZ,MAiCN,uBACA,0CACA,uBAAOe,KAAK,OAAOC,KAAK,MAAMC,MAAOf,EAAKgB,SAjC9B,SAACC,GACnB,IAAIL,EAAOK,EAAMC,OAAOH,MACxBd,EAAOW,MAiCD,uBACA,gDACA,uBACEC,KAAK,OACLC,KAAK,SACLC,MAAOnB,EACPoB,SArCa,SAACC,GACtB,IAAIL,EAAOK,EAAMC,OAAOH,MACxBlB,EAAUe,MAqCJ,0BAEF,uBAAOC,KAAK,SAASE,MAAM,cAE7B,gCACE,0CAAwBI,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOC,EAAI,MACpD,0CAAwBF,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOE,EAAI,MACpD,0CAAwBH,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOG,EAAI,MACpD,0CAAwBJ,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOI,EAAI,MACpD,0CAAwBL,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOK,EAAI,MACpD,8CAA4BN,IAAhBjB,EAAKkB,OAAuBlB,EAAKkB,OAAOM,MAAQ,SAE9D,8DC5DSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e2a3bd4.chunk.js","sourcesContent":["import \"./App.css\";\nimport flattenedGrades from \"./flattenedGrades.json\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [course, setCourse] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [sem, setSem] = useState(\"\");\n  const [data, setData] = useState({});\n\n  useEffect(() => {});\n\n  const onYearChange = (event) => {\n    let temp = event.target.value;\n    setYear(temp);\n    console.log(year);\n  };\n  const onSemChange = (event) => {\n    let temp = event.target.value;\n    setSem(temp);\n  };\n  const onCourseChange = (event) => {\n    let temp = event.target.value;\n    setCourse(temp);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(flattenedGrades);\n    let temp = flattenedGrades[year][sem][course];\n    setData(temp);\n    console.log(data);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>Exclusive content for B2 Wing </h1>\n        <p>note -E grades if given are missing in this list </p>\n        <p>do follow the instruction else the website WILL crash</p>\n        <p>Write year in format yyyy-yy</p>\n        <p>Sem values can be either 1 or 2</p>\n        <p>Write the course no in Block letters (eg- ESC201A)</p>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-content\">\n          <label>Year : </label>\n          <input type=\"text\" name=\"year\" value={year} onChange={onYearChange} />\n\n          <br />\n          <label>Sem :</label>\n          <input type=\"text\" name=\"sem\" value={sem} onChange={onSemChange} />\n\n          <br />\n          <label>Course no :</label>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={course}\n            onChange={onCourseChange}\n          />\n          <br />\n        </div>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <div>\n        <h1>A -{data.Grades !== undefined ? data.Grades.A : \"\"}</h1>\n        <h1>B -{data.Grades !== undefined ? data.Grades.B : \"\"}</h1>\n        <h1>C -{data.Grades !== undefined ? data.Grades.C : \"\"}</h1>\n        <h1>D -{data.Grades !== undefined ? data.Grades.D : \"\"}</h1>\n        <h1>F -{data.Grades !== undefined ? data.Grades.F : \"\"}</h1>\n        <h1>Total -{data.Grades !== undefined ? data.Grades.Total : \"\"}</h1>\n      </div>\n      <div> Made by Abhinav Tiwari</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}